services:
  parser:
      build: ./parser
      depends_on:
        db:
          condition: service_healthy
      restart: unless-stopped
      volumes:
        - ./parser/res:/app/res:ro
      networks:
        - default
      # включи для диагностики проблем с драйвером Qt PostgreSQL
      # environment:
      #   QT_DEBUG_PLUGINS: "1"

  redis:
    image: redis:7
    command: [ "redis-server","--appendonly","yes" ]
    volumes:
      - redis_data:/data
    networks:
      default:
        ipv4_address: 172.15.0.3

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    env_file: .env
    volumes:
      - ./backend/src:/app/src:rw
    ports:
      - "${BACKEND_HOST_PORT}:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  frontend:
    build: ./frontend
    env_file: .env
    volumes:
      - ./frontend:/app:rw
      - /app/node_modules
    expose: ["5173"]
    profiles: ["dev"]

  proxy:
    image: nginx:1.27
    volumes:
      - ./proxy/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on: [backend, frontend]
    profiles: ["dev"]

volumes:
  postgres_data:
  redis_data:
networks:
  default:
    name: podolsk-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.15.0.0/16
